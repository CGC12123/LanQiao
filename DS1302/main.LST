C51 COMPILER V9.01   MAIN                                                                  04/05/2023 12:20:20 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\KEIL4 C51\C51\BIN\C51.EXE main.c BROWSE INCDIR(..\DS1302) DEBUG OBJECTEXTEND

line level    source

   1          #include "reg52.h"  
   2          #include "intrins.h"
   3          
   4          sbit HC138_A = P2^5;        
   5          sbit HC138_B = P2^6;        
   6          sbit HC138_C = P2^7;        
   7          
   8          sbit SCLK = P1^7; 
   9          sbit RST =  P1^3; 
  10          sbit DSIO = P2^3;
  11          unsigned char code READ_RTC_ADDR[7] = {0x81, 0x83, 0x85, 0x87, 0x89, 0x8b, 0x8d};
  12          unsigned char code WRITE_RTC_ADDR[7] = {0x80, 0x82, 0x84, 0x86, 0x88, 0x8a, 0x8c};
  13          unsigned char TIME[7] = {0x30, 0x50, 0x23, 0x17, 0x02, 0x06, 0x18};
  14          
  15          unsigned char code SMG_NoDot[18] = 
  16              {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,
  17               0x80,0x90,0x88,0x80,0xc6,0xc0,0x86,0x8e,
  18               0xbf,0x7f};
  19          
  20          void DelaySMG(unsigned int time)
  21          {
  22   1              while(time--);
  23   1      }
  24          
  25          void Init74HC138(unsigned char n)
  26          {
  27   1              switch(n)
  28   1              {
  29   2                      case 4:
  30   2                              HC138_A = 0;
  31   2                              HC138_B = 0;
  32   2                              HC138_C = 1;
  33   2                              break;
  34   2                      case 5:
  35   2                              HC138_A = 1;
  36   2                              HC138_B = 0;
  37   2                              HC138_C = 1;
  38   2                              break;
  39   2                      case 6:
  40   2                              HC138_A = 0;
  41   2                              HC138_B = 1;
  42   2                              HC138_C = 1;
  43   2                              break;
  44   2                      case 7:
  45   2                              HC138_A = 1;
  46   2                              HC138_B = 1;
  47   2                              HC138_C = 1;
  48   2                              break;
  49   2                      case 8:
  50   2                              HC138_A = 0;
  51   2                              HC138_B = 0;
  52   2                              HC138_C = 0;
  53   2                              break;
  54   2              }
  55   1      }
C51 COMPILER V9.01   MAIN                                                                  04/05/2023 12:20:20 PAGE 2   

  56          void Init()
  57          {
  58   1              Init74HC138(5);
  59   1              P0 = 0x00;
  60   1              Init74HC138(4);
  61   1              P0 = 0xff;
  62   1      }
  63          void DispaySMG_Bit(unsigned char value, unsigned char pos)
  64          {
  65   1              Init74HC138(6);
  66   1              P0 = (0x01 << pos);
  67   1              Init74HC138(7);
  68   1              P0 = value;
  69   1      }
  70          
  71          void DS1302_WriteByte(unsigned char addr, unsigned char dat)
  72          {
  73   1              unsigned char n;
  74   1              RST = 0;
  75   1              _nop_();
  76   1              SCLK = 0;
  77   1              _nop_();
  78   1              RST = 1;
  79   1              _nop_();        
  80   1      
  81   1              for (n=0; n<8; n++)
  82   1              {
  83   2                      DSIO = addr & 0x01;
  84   2                      addr >>= 1;
  85   2                      SCLK = 1;
  86   2                      _nop_();
  87   2                      SCLK = 0;
  88   2                      _nop_();
  89   2              }
  90   1              for (n=0; n<8; n++)
  91   1              {
  92   2                      DSIO = dat & 0x01;
  93   2                      dat >>= 1;
  94   2                      SCLK = 1;
  95   2                      _nop_();
  96   2                      SCLK = 0;
  97   2                      _nop_();
  98   2              }                 
  99   1              RST = 0;
 100   1              _nop_();
 101   1      }
 102          
 103          unsigned char DS1302_ReadByte(unsigned char addr)
 104          {
 105   1              unsigned char n,dat,tmp;
 106   1              RST = 0;
 107   1              _nop_();
 108   1              SCLK = 0;
 109   1              _nop_();
 110   1              RST = 1;
 111   1              _nop_();
 112   1      
 113   1              for(n=0; n<8; n++)
 114   1              {
 115   2                      DSIO = addr & 0x01;
 116   2                      addr >>= 1;
 117   2                      SCLK = 1;
C51 COMPILER V9.01   MAIN                                                                  04/05/2023 12:20:20 PAGE 3   

 118   2                      _nop_();
 119   2                      SCLK = 0;
 120   2                      _nop_();
 121   2              }
 122   1              
 123   1              for(n=0; n<8; n++)
 124   1              {
 125   2                      tmp = DSIO;
 126   2                      dat = (dat>>1) | (tmp<<7);
 127   2                      SCLK = 1;
 128   2                      _nop_();
 129   2                      SCLK = 0;
 130   2                      _nop_();
 131   2              }
 132   1      
 133   1              RST = 0;
 134   1              _nop_();
 135   1              SCLK = 1;
 136   1              _nop_();
 137   1              DSIO = 0;
 138   1              _nop_();
 139   1              DSIO = 1;
 140   1              _nop_();
 141   1              return dat;        
 142   1      }
 143          
 144          void DS1302_Config()
 145          {
 146   1              unsigned char n;
 147   1              DS1302_WriteByte(0x8E,0x00); 
 148   1              for (n=0; n<7; n++) 
 149   1              {
 150   2                      DS1302_WriteByte(WRITE_RTC_ADDR[n],TIME[n]);        
 151   2              }
 152   1              DS1302_WriteByte(0x8E,0x80); 
 153   1      }
 154          
 155          void DS1302_ReadTime()
 156          {
 157   1              unsigned char n;
 158   1              for (n=0; n<7; n++) 
 159   1              {
 160   2                      TIME[n] = DS1302_ReadByte(READ_RTC_ADDR[n]);
 161   2              }                
 162   1      }
 163          
 164          void XMF_ShowRealTime()
 165          {
 166   1      
 167   1              DispaySMG_Bit(SMG_NoDot[TIME[2]/16],0);        
 168   1              DelaySMG(500);
 169   1              DispaySMG_Bit(0xff,0);                        
 170   1              DispaySMG_Bit(SMG_NoDot[TIME[2]&0x0f],1);
 171   1              DelaySMG(500);
 172   1              DispaySMG_Bit(0xff,1);
 173   1              DispaySMG_Bit(SMG_NoDot[16],2);
 174   1              DelaySMG(500);
 175   1              DispaySMG_Bit(0xff,2);
 176   1      
 177   1              DispaySMG_Bit(SMG_NoDot[TIME[1]/16],3);
 178   1              DelaySMG(500);
 179   1              DispaySMG_Bit(0xff,3);
C51 COMPILER V9.01   MAIN                                                                  04/05/2023 12:20:20 PAGE 4   

 180   1              DispaySMG_Bit(SMG_NoDot[TIME[1]&0x0f],4);
 181   1              DelaySMG(500);
 182   1              DispaySMG_Bit(0xff,4);
 183   1              DispaySMG_Bit(SMG_NoDot[16],5);
 184   1              DelaySMG(500);
 185   1              DispaySMG_Bit(0xff,5);
 186   1      
 187   1              DispaySMG_Bit(SMG_NoDot[TIME[0]/16],6);
 188   1              DelaySMG(500);
 189   1              DispaySMG_Bit(0xff,6);
 190   1              DispaySMG_Bit(SMG_NoDot[TIME[0]&0x0f],7);
 191   1              DelaySMG(500);
 192   1              DispaySMG_Bit(0xff,7);
 193   1      }
 194          
 195          main()
 196          {
 197   1              Init();
 198   1                      DS1302_Config();
 199   1              while(1)
 200   1              {
 201   2                      DS1302_ReadTime();
 202   2                      XMF_ShowRealTime();
 203   2              }
 204   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    409    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
